<?xml version="1.0" encoding="UTF-8"?>

<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://java.sun.com/xml/ns/javaee"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
         id="WebApp_ID" version="3.0">

    <!-- <display-name>NuoxinEnterpriseAppOps</display-name> -->

    <!-- for shared session -->
    <!--  <context-param>
       <param-name>sharedSessionTimeout</param-name>
       <param-value>1800</param-value>
     </context-param>
     <context-param>
       <param-name>memcachedClientBeanId</param-name>
       <param-value>memcachedClient</param-value>
     </context-param>

     <context-param>
       <param-name>sharedSessionIdCookieName</param-name>
       <param-value>sessid</param-value>
     </context-param>
     <context-param>
       <param-name>sharedSessionIdCookieSecure</param-name>
       <param-value>false</param-value>
     </context-param> -->

    <!-- for spring -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath:applicationContext.xml
        </param-value>
    </context-param>

    <!-- spring container -->
    <listener>
        <listener-class>
            org.springframework.web.context.ContextLoaderListener
        </listener-class>
    </listener>
    <listener>
        <listener-class>
            org.springframework.web.util.IntrospectorCleanupListener
        </listener-class>
    </listener>

    <!-- set utf-8 charset -->
    <filter>
        <filter-name>springUtf8Encoding</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>springUtf8Encoding</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!-- ocs-based shared session  -->
    <!--   <filter>
        <filter-name>ocsSessionFilter</filter-name>
        <filter-class>com.lianchuang.common.web.http.session.sharedsession.MemcachedSessionFilter</filter-class>
        <init-param>
          <param-name>sessionIdName</param-name>
          <param-value>sessid</param-value>
        </init-param>
      </filter>
      <filter-mapping>
        <filter-name>ocsSessionFilter</filter-name>
        <url-pattern>/*</url-pattern>
      </filter-mapping> -->

    <!-- 跨域设置filter，在spring servlet前 -->
    <filter>
        <filter-name>crossDomain</filter-name>
        <filter-class>cn.edu.nju.software.filter.CrossDomainFilter</filter-class>
        <init-param>
            <param-name>allowCrossDomain</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>crossDomain</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!-- Http方法转换filter -->
    <filter>
        <filter-name>HiddenHttpMethodFilter</filter-name>
        <filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>HiddenHttpMethodFilter</filter-name>
        <servlet-name>dispatcher</servlet-name>
    </filter-mapping>

    <!-- for spring mvc dispatcher -->
    <servlet>
        <servlet-name>dispatcher</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:spring-mvc.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>dispatcher</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>

    <!-- for kaptcha-->
    <!--  <servlet>
       <servlet-name>Kaptcha</servlet-name>
       <servlet-class>com.google.code.kaptcha.servlet.KaptchaServlet</servlet-class>
       <init-param>
         <param-name>kaptcha.border</param-name>
         <param-value>no</param-value>
       </init-param>
       <init-param>
         <param-name>kaptcha.textproducer.font.color</param-name>
         <param-value>black</param-value>
       </init-param>
       <init-param>
         <param-name>kaptcha.textproducer.char.space</param-name>
         <param-value>5</param-value>
       </init-param>
       <init-param>
         <param-name>kaptcha.session.key</param-name>
         <param-value>KAPTCHA_SESSION_KEY - Guess me if you can</param-value>
       </init-param>
     </servlet>
     <servlet-mapping>
       <servlet-name>Kaptcha</servlet-name>
       <url-pattern>/validate.jpg</url-pattern>
     </servlet-mapping> -->

    <!-- filter for xss -->
    <!--  <filter>
       <filter-name>xssFilter</filter-name>
       <filter-class>com.nuoxin.bankend.business.utils.security.XSSFilter</filter-class>
     </filter>
     <filter-mapping>
       <filter-name>xssFilter</filter-name>
       <url-pattern>/*</url-pattern>
       <dispatcher>REQUEST</dispatcher>
     </filter-mapping> -->

</web-app>
